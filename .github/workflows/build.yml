name: Build and push containers
on: 
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  TAGS: |
    type=sha
    type=ref,event=branch

jobs: 
  build:
    runs-on: ubuntu-22.04
    steps:
      - run: npm install -g elm-format

      - uses: actions/checkout@v2

      - name: Setup haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.2.5'
          enable-stack: true
          stack-version: 'latest'

      - name: Stack cache
        uses: freckle/stack-cache-action@v2
        with:
          working-directory: server

      - name: Build executables and run codegen
        run: | 
          cd server
          stack build --copy-bins
          stack run codegen

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags and labels (server)
        id: meta-server
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/vv90/contest-viewer-server
          tags: ${{ env.TAGS }}

      - name: Build and push Docker image (server)
        uses: docker/build-push-action@v3
        with: 
          context: server
          file: server/Dockerfile
          build-args: BIN_PATH=/home/runner/.local/bin
          push: true
          tags: ${{ steps.meta-server.outputs.tags}}
          labels: ${{ steps.meta-server.outputs.labels}}

      - name: Prepare tags and labels (client)
        id: meta-client
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/vv90/contest-viewer-client
          tags: ${{ env.TAGS }}

      - name: Build and push Docker image (client)
        uses: docker/build-push-action@v3
        with:
          context: client
          file: client/Dockerfile
          push: true
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}