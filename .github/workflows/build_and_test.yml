name: Build and test

on: 
  push:
    branches: 
      - main
  pull_request: 
    types: 
      - opened
      # "synchronize" means new commits pushed to the HEAD of the pull request branch
      - synchronize

env:
  REGISTRY: ghcr.io
  # What tags does:
  # - always tag with sha
  # - always tag with branch name
  # - if a release tag is 'v1.0.0', then tag 'latest' and '1.0.0'
  # More info: https://github.com/docker/metadata-action#tags-input
  TAGS: |
    type=sha
    type=ref,event=branch
    type=semver,pattern={{major}}.{{minor}}.{{patch}}

jobs: 
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.1

      - name: Server Build and test
        uses: freckle/stack-action@v4
        id: stack
        with:
          working-directory: server
          fast: false
          pedantic: true
          test: true
          cache-prefix: lts-21.1
          stack-arguments: --copy-bins --local-bin-path target

      - name: Remove generated frontend code (so that it fails without codegen)
        working-directory: client
        run: rm -r src/Api

      - name: Codegen
        working-directory: server
        run: ./target/codegen-exe

      - name: Client install, check and build
        run: |
          npm ci
          npm run check 
          npm run build

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare tags and labels (backend)
        id: meta-server
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/vv90/marauders-radar-server
          tags: ${{ env.TAGS }}
      
      - name: Build and push Docker image (backend)
        uses: docker/build-push-action@v4
        with:
          context: server/target
          file: server/Dockerfile
          push: true
          tags: ${{ steps.meta-server.outputs.tags}}
          labels: ${{ steps.meta-server.outputs.labels}}
          # build-args: SOME_VERSION=${{ steps.vars.outputs.SOME_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare tags and labels (client)
        id: meta-client
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/vv90/marauders-radar-client
          tags: ${{ env.TAGS }}

      - name: Build and push Docker image (client)
        uses: docker/build-push-action@v4
        with:
          context: client
          file: client/Dockerfile
          push: true
          # build-args: WOLF_VERSION=${{ steps.vars.outputs.SOME_VERSION }}
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max