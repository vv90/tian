# Job to create server cache in the master branch that will be available to all braches that are based on master branch

name: CI-contest-viewer

#Environment variables!
env:
  AWS_S3_BUCKET : contest-viewer
  AWS_REGION    : us-east-1

# Workflow will run on push to master
on:
  push:
    branches: [ "master" ]

# A workflow run is made up of build and deploy job
jobs:
#Server folder job
  build_server:
  # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    defaults:
      run:
      # Server folder working directory.
        working-directory: server 

      # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository
    - name: Git clone
      uses: actions/checkout@v3
      
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          server:
            - 'server/**'     
            
    - name: Cache ~/cache
      if: steps.filter.outputs.server == 'true'
      uses: actions/cache@v3
      id:   cache-stack
      with:
        path: cache
        key: ${{ runner.os }}-stack-global-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
        
    - if: steps.filter.outputs.server == 'true'
      run: |
        # Build backend-artifacts
        docker build -f Dockerfile.artifacts -t artifacts .
        # Create container from image without running it to extract artifacts
        id=$(docker create artifacts)
        # Save stack depenencies cache
        # to avoid copying the same archive to the host again (useful only for frequent local docker builds)
        docker cp $id:/root/stack_dependencies_cache.tar.gz - >./cache/stack_dependencies_cache.tar.gz.tar
