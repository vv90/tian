# This workflow compiles code with Elm and uploads it to s3 static site http://contest-viewer.s3-website-us-east-1.amazonaws.com/

name: CI-contest-viewer

#Environment variables
env:
  AWS_S3_BUCKET : contest-viewer
  AWS_REGION    : us-east-1
# Workflow will run on push to master
on:
  # Triggers the workflow on push request events but only for the "master" branch
  push:
    branches: [ "master" ]

# A workflow run is made up of two jobs that build and deploy. Jobs run sequentially
jobs:
  # Two job called "build" and "deploy"
  build:
  # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Git clone files
      uses: actions/checkout@v3
      
    # AWS programmatic access to the bucket s3://contest-viewer with permissions
    #- name: Configure AWS access
    #  uses: aws-actions/configure-aws-credentials@v1
    #  with:
    #    aws-access-key-id : ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    aws-region: ${{ env.AWS_REGION }}

      # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        curl -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz
        gunzip elm.gz
        chmod +x elm
        elm make client/src/Main.elm --output=client/assets/inline/bundle.js
        ls client/assets/inline/
        mv client/index.src.html client/index.html

      # Deploys new files to S3 static website with s3-sync https://github.com/jakejarvis/s3-sync-action
    - name: sync folder with S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
        SOURCE_DIR: 'client'  
