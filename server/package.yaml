name:                server
version:             0.1.0.0
github:              "githubuser/server"
license:             BSD3
author:              "Author name here"
maintainer:          "example@example.com"
copyright:           "2022 Author name here"

# language: GHC2021

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/githubuser/server#readme>

default-extensions:
- DataKinds
- DeriveAnyClass
- DerivingStrategies
- DerivingVia
- LambdaCase
- NoImplicitPrelude
# - NoMonomorphismRestriction # TODO: Разобраться, https://github.com/VladimirLogachev/wolf/issues/405
- OverloadedStrings
- OverloadedRecordDot
- DuplicateRecordFields

#ghc2021 defaults:
- DeriveGeneric  
- NamedFieldPuns
- TupleSections  
- ImportQualifiedPost

ghc-options:
  # Use up to 8 cores for compilation https://ghc.gitlab.haskell.org/ghc/doc/users_guide/using.html?highlight=j#ghc-flag--j[%E2%9F%A8n%E2%9F%A9]
  - -j8
  # Set up rts options for GHC itself https://ghc.gitlab.haskell.org/ghc/doc/users_guide/runtime_control.html#setting-rts-options
  - +RTS -A32m -RTS
  # Optimization level:
  # -O0 produces a non-optimized binary (significantly reduces Seq performance), but builds fast.
  # -O2 produces a heavily optimized binary, but builds ~ 2 times slower.
  # Note: Stack reuses existing binaries instead of rebuilding if the source code hasn't changed.
  # We build optimized binaries by default and turn optimizations off by `--fast` flag.
  - -O2
    # Enables local documentation
  - -haddock
    # Enable all possible warnings as errors (Werror is provided manually in dockerfile for production builds and CI)
  # - -Weverything # TODO: https://github.com/vv90/contest-viewer/issues/9
    # Intentionally ignore some warnings
  - -Wno-all-missed-specialisations
  - -Wno-implicit-prelude
  - -Wno-missed-specialisations
  - -Wno-missing-local-signatures
  - -Wno-missing-export-lists
  - -Wno-unsafe
  - -Wno-safe
  - -Wno-unused-packages
  # -Wmissing-kind-signatures requires kind signature for every newtype. Not worth it.
  - -Wno-missing-kind-signatures
  # Not sure if it's really useful for us, because some modules are still not "safe haskell".
  - -Wno-missing-safe-haskell-mode
    # Temporarily disabled warnings which need to be fixed eventually
    # 1. It is inconvenient to specify imports for all record fields and all value constructors
    # We need to find a better way.
  - -Wno-missing-import-lists
    # Because of hpack implementation details
  - -Wno-prepositive-qualified-module
  # ------ temporary:
  # - -Wno-missing-deriving-strategies
  # # - -Wno-unused-imports
  # - -Wno-name-shadowing
  # - -Wno-operator-whitespace
  # - -Wno-type-defaults
  # - -Wno-unused-matches
  # - -Wno-identities
  # - -Wno-incomplete-patterns


dependencies:
- base >= 4.7 && < 5
 # an alternative to Prelude
- relude
# for json encoding/decoding
- aeson
# for serving api
- servant-server
- servant-multipart
- servant-websockets
- conduit
- conduit-extra
# for api server configuration
- wai
- wai-cors
- warp
- http-types
# for multithreading
- stm
- async
- stm-chans
- stm-conduit
# monad transformer library
- mtl
- monad-logger
# for efficient strings
- text
# for composing strings
- fmt
# for UTCTime
- time
# heap data structure
# - heap
# for database interaction
- hasql
- hasql-th
- hasql-transaction
- profunctors
- vector
# data structures like IntMap, IntSet, Graph, etc.
# - containers
# statically checked physical dimensions
# - dimensional
# Parser combinators
- parsec
# Geographical Position Calculations
- jord
# for working with binary data
- binary
# for elm codegen
- haskell-to-elm
- elm-syntax
- generics-sop
# for elm codegen
- process
# for elm codegen
- prettyprinter
# for elm codegen
- unordered-containers
# for elm codegen
- filepath
# for elm codegen
- directory

library:
  source-dirs: src

executables:
  server-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    # - base
    - server

  codegen: 
    main: Main.hs
    source-dirs: codegen
    dependencies: 
    - server
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N

  seed: 
    main: Main.hs
    source-dirs: seed

    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N

    dependencies:
    # - base
    - server

tests:
  server-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    # - base
    - server
    - hspec
    - hspec-wai
    - hspec-wai-json
    - aeson
